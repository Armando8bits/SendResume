package Forms;

import Funciones.Datos;
import Funciones.VariablesdeEntorno;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * @author ROQUEARMANDORAMIREZP
 */
public class FrmPerfAdm extends javax.swing.JInternalFrame {

    int IntFila;
    String StrCodFila;
    Datos DAT;
    VariablesdeEntorno Variable = new VariablesdeEntorno();
    String[][] MatrixTemp = new String[Variable.IntFilas][Variable.IntColum];
    String[] ModeloColumn = new String[Variable.IntColum];

    /**
     * Creates new form FrmPerfAdm
     */
    public FrmPerfAdm() {
        this.DAT = new Datos();
        initComponents();
        CargarDatos();
    }

    private void CargarDatos() {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Codigo");
        modelo.addColumn("Nombre");
        modelo.addColumn("Caso");
        modelo.addColumn("Cargo");
        modelo.addColumn("CV");
        modelo.addColumn("Asunto");
        modelo.addColumn("Mensaje");
        //boolean opt = DAT.HayEspacio();
        //System.out.println("\n Aqui toy! Ultimao=" + opt);
        //if (DAT.getMatrixPerfiles() != null) {//esta linea es necesaria, si no se crashea al iniciar x 1er vez
        MatrixTemp = DAT.getMatrixPerfiles(); // lee los archivos existentes

        if (MatrixTemp != null) {//cuando el archivo esta vacio no aroja fallas
            for (int i = 0; i < Variable.IntFilas; i++) {
                if (MatrixTemp[i][0] != null) { //imprime solo los validos
                    for (int j = 0; j < Variable.IntColum; j++) {
                        ModeloColumn[j] = MatrixTemp[i][j];
                    }
                    modelo.addRow(ModeloColumn);
                }
            }
        }

        Grdbuscar.setModel(modelo);
        IntFila = 0;
        StrCodFila = "";

        if (Grdbuscar.getRowCount() < 1) {
            CmdNuevo.setEnabled(true);
            CmdEditar.setEnabled(false);
            CmdEliminar.setEnabled(false);
        } else if (Grdbuscar.getRowCount() >= Variable.IntFilas) {
            CmdNuevo.setEnabled(false);
            CmdEditar.setEnabled(true);
            CmdEliminar.setEnabled(true);
        } else {
            CmdNuevo.setEnabled(true);
            CmdEditar.setEnabled(true);
            CmdEliminar.setEnabled(true);
        }
        //}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Grdbuscar = new javax.swing.JTable();
        CmdNuevo = new javax.swing.JButton();
        CmdEliminar = new javax.swing.JButton();
        CmdEditar = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setTitle("Administrar Perfiles");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Ico/icon_user.gif"))); // NOI18N
        setVisible(true);

        Grdbuscar= new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        Grdbuscar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        Grdbuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Grdbuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GrdbuscarMouseClicked(evt);
            }
        });
        Grdbuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                GrdbuscarKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(Grdbuscar);

        CmdNuevo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        CmdNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ico/plus.png"))); // NOI18N
        CmdNuevo.setText("Nuevo");
        CmdNuevo.setToolTipText("");
        CmdNuevo.setFocusable(false);
        CmdNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        CmdNuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        CmdNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmdNuevoActionPerformed(evt);
            }
        });

        CmdEliminar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        CmdEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ico/cross_delete_exit_remove_icon (32).png"))); // NOI18N
        CmdEliminar.setText("Eliminar");
        CmdEliminar.setToolTipText("Eliminar");
        CmdEliminar.setFocusable(false);
        CmdEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        CmdEliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        CmdEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmdEliminarActionPerformed(evt);
            }
        });

        CmdEditar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        CmdEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ico/page_edit.png"))); // NOI18N
        CmdEditar.setText("Editar");
        CmdEditar.setToolTipText("Editar");
        CmdEditar.setFocusable(false);
        CmdEditar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        CmdEditar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        CmdEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmdEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 593, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CmdNuevo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CmdEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CmdEliminar)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CmdEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CmdNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CmdEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GrdbuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrdbuscarMouseClicked
        IntFila = (Grdbuscar.rowAtPoint(evt.getPoint())); //obtiene el numero de fila de la tabla.
        StrCodFila = String.valueOf(Grdbuscar.getValueAt(IntFila, 0)); //obtiene el Valor del COD seleccionada

        if (evt.getClickCount() == 2) { //si se hace doble click...
            Editar();
        }
    }//GEN-LAST:event_GrdbuscarMouseClicked
    private void CmdNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmdNuevoActionPerformed
        FrmPerfNue muestrate = new FrmPerfNue();
        FrmPrincipal.Escritorio.add(muestrate);
        muestrate.setTitle("Nuevo Perfil");
        muestrate.CodModif = ""; //habilita el guardado de nuevos
        muestrate.show();
        this.dispose();    //cierra esta ventana
    }//GEN-LAST:event_CmdNuevoActionPerformed

    private void CmdEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmdEliminarActionPerformed
        Eliminar();
    }//GEN-LAST:event_CmdEliminarActionPerformed

    private void CmdEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmdEditarActionPerformed
        Editar();
    }//GEN-LAST:event_CmdEditarActionPerformed

    private void GrdbuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GrdbuscarKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_DELETE || evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
            Eliminar();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_UP) {
            IntFila = Grdbuscar.getSelectedRow();
            StrCodFila = String.valueOf(Grdbuscar.getValueAt(IntFila, 0)); //obtiene el Valor del COD seleccionada  
        }
    }//GEN-LAST:event_GrdbuscarKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CmdEditar;
    private javax.swing.JButton CmdEliminar;
    private javax.swing.JButton CmdNuevo;
    private javax.swing.JTable Grdbuscar;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void Editar() {
        if (Grdbuscar.getRowCount() > 0 && StrCodFila.length() > 0) {
            FrmPerfNue muestrate = new FrmPerfNue();
            FrmPrincipal.Escritorio.add(muestrate);
            muestrate.setTitle("Editar Perfil");
            muestrate.TxtNom.setText(String.valueOf(Grdbuscar.getValueAt(IntFila, 1)));
            muestrate.TxtCaso.setText(String.valueOf(Grdbuscar.getValueAt(IntFila, 2)));
            muestrate.TxtCargo.setText(String.valueOf(Grdbuscar.getValueAt(IntFila, 3)));
            muestrate.TxtCV.setText(String.valueOf(Grdbuscar.getValueAt(IntFila, 4)));
            muestrate.TxtAsunto.setText(String.valueOf(Grdbuscar.getValueAt(IntFila, 5)));
            muestrate.TxtLabia.setText(String.valueOf(Grdbuscar.getValueAt(IntFila, 6)));
            muestrate.CodModif = StrCodFila; //habilita modo Edición
            muestrate.show();
            this.dispose();    //cierra esta ventana  
        }
    }

    private void Eliminar() {
        if (Grdbuscar.getRowCount() > 0 && StrCodFila.length() > 0) {
            int opci = JOptionPane.showConfirmDialog(null, "¿Esta seguro de Eliminar el Perfil " + Grdbuscar.getValueAt(IntFila, 1) + "?", "Alerta!", JOptionPane.YES_NO_OPTION);
            if (opci == JOptionPane.YES_OPTION) { //elimina si y solo si el usuario acepta
                DAT.DeletePerfil(StrCodFila);
                JOptionPane.showMessageDialog(null, "Perfil " + Grdbuscar.getValueAt(IntFila, 1) + " eliminado con exito", "Aviso", JOptionPane.DEFAULT_OPTION);
                CargarDatos();
            }
        }
    }
}
